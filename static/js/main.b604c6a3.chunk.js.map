{"version":3,"sources":["components/InformationCard/InformationCard.js","components/SearchInput/SearchInput.js","utilis/helper.js","App.js","index.js","assets/search-solid.svg"],"names":["InformationCard","props","measurements","airQualityInfo","react_default","a","createElement","className","onClick","removeCard","dist_default","fromNow","lastUpdated","city","location","country","map","parameter","index","key","toUpperCase","length","value","concat","SearchInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","inputValue","target","toLowerCase","capitalizedInput","suggestions","state","apiData","filter","cityData","startsWith","setState","noResults","showSuggestions","preventDefault","handleSelect","innerHTML","trim","cityInfo","id","Math","random","toString","substring","fetch","then","response","json","results","selectedCities","toConsumableArray","newState","_this2","_this3","onChange","onFocus","src","searchIcon","alt","type","defaultValue","placeholder","suggestion","components_InformationCard_InformationCard","Component","App","components_SearchInput_SearchInput","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b604c6a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Moment from 'react-moment';\r\nimport './InformationCard.css' \r\n\r\nfunction InformationCard(props) {\r\n    const measurements = props.airQualityInfo.measurements;\r\n  return (\r\n    <div className=\"card\">\r\n     <span className=\"close\" onClick={props.removeCard}></span>\r\n     <p className='updated-time'>Updated <Moment fromNow>{props.lastUpdated}</Moment> </p>\r\n      <p className='city'>{props.airQualityInfo.city}</p>\r\n      <p className='location'>\r\n        In {props.airQualityInfo.location}, {props.airQualityInfo.country === 'GB' ? 'United Kingdom' : null}\r\n      </p>\r\n      <strong >\r\n       <span className='values-text'>Values:</span>\r\n       {props.airQualityInfo\r\n        ? measurements.map( (parameter, index) => (\r\n              <span className='parameters' key={index}>\r\n                 {parameter.parameter.toUpperCase()}: {index === measurements.length - 1 ? parameter.value :  `${parameter.value}, `}\r\n              </span>\r\n          ))\r\n        : null}\r\n        </strong>\r\n    </div>\r\n  );\r\n}\r\nexport default InformationCard;\r\n","import React , { Component } from 'react';\r\nimport InformationCard from '../InformationCard/InformationCard';\r\nimport { generateID } from '../../utilis/helper'\r\nimport searchIcon from '../../assets/search-solid.svg'\r\nimport './SearchInput.css'\r\n\r\nclass SearchInput extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            inputValue:'',\r\n            apiData:[],\r\n            showSuggestions:false,\r\n            suggestions:[],\r\n            selectedCities:[],\r\n            noResults:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://api.openaq.org/v1/cities?country=GB&limit=200')\r\n        .then(response => response.json())\r\n        .then(json => this.setState({apiData:json.results}))\r\n    }\r\n\r\n    handleChange = (e) => {\r\n      const inputValue = e.target.value.toLowerCase();\r\n      const capitalizedInput = e.target.value\r\n      let suggestions = this.state.apiData.filter((cityData) => cityData.city.toLowerCase().startsWith(inputValue) )\r\n      if(inputValue === '' || inputValue === ' ') {\r\n          suggestions = []\r\n      }\r\n      suggestions.length === 0 && inputValue !==''\r\n        ? this.setState({suggestions:suggestions, inputValue:capitalizedInput , noResults:true })\r\n        : this.setState({suggestions:suggestions, inputValue:capitalizedInput , noResults:false, showSuggestions:true})\r\n      e.preventDefault();\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n        const city = e.target.innerHTML.trim();\r\n        const cityInfo = {\r\n            airQualityInfo:null,\r\n            lastUpdated:null,\r\n            id:generateID()\r\n        }\r\n\r\n        //get Air Quality Data and Last Updated info\r\n        fetch(`https://api.openaq.org/v1/latest?country=GB&city=${city}`)\r\n        .then(response => response.json())\r\n        .then(json => cityInfo.airQualityInfo = json.results[0])\r\n        .then(() =>\r\n            fetch(`https://api.openaq.org/v1/locations?country=GB&city=${city}`)\r\n            .then(response => response.json())\r\n            .then(json => cityInfo.lastUpdated = json.results[0].lastUpdated )\r\n            .then( () =>\r\n                //set the state\r\n                this.setState((state) => ({\r\n                    selectedCities: [...state.selectedCities, cityInfo],\r\n                    inputValue: city,\r\n                    showSuggestions:false\r\n            })))\r\n\r\n        )\r\n    }\r\n   removeCard = (id) => {\r\n        const newState =  this.state.selectedCities.filter((city) => city.id !== id )\r\n        this.setState({\r\n            selectedCities:newState\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"app-container\">\r\n                <div className='input-container'>\r\n                    <form  className='input-form'\r\n                    onChange={this.handleChange}\r\n                    onFocus={this.handleChange}>\r\n                        <img className='search-icon' src={searchIcon} alt='search icon'/>\r\n                        <input type='text'\r\n                        className='search-input'\r\n                        defaultValue={this.state.inputValue}\r\n                        placeholder=\"Enter city name...\"/>\r\n                        \r\n                    </form>\r\n                        <ul className=\"suggestions-container\" id='style-1'>\r\n                            { this.state.showSuggestions\r\n                            ? this.state.suggestions.map((suggestion, index) => (\r\n                                <li className=\"suggestion-element\"\r\n                                    onClick={this.handleSelect}\r\n                                    key={index}>\r\n                                    {suggestion.city}\r\n                                </li>\r\n                                ))\r\n                            : null\r\n                            }\r\n                        </ul>\r\n\r\n                        {this.state.noResults\r\n                        ? <p className='error-msg'>Sorry, we do not have any results for your query</p>\r\n                        : null }\r\n                    </div>\r\n                    <div className='cards-container'>\r\n                    { this.state.selectedCities.length > 0\r\n                    ? this.state.selectedCities.map((city) =>\r\n                    (<InformationCard\r\n                        key={city.id}\r\n                        removeCard={()=>this.removeCard(city.id)}\r\n                        lastUpdated={city.lastUpdated}\r\n                        airQualityInfo={city.airQualityInfo}/>)\r\n                    )\r\n                    : null\r\n                    }\r\n            </div>\r\n         </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchInput;\r\n","export function generateID () {\r\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n  }","import React from 'react';\r\nimport './App.css';\r\nimport SearchInput from './components/SearchInput/SearchInput'\r\n\r\nfunction App() {\r\n  return (\r\n    <div >\r\n      <h1 className='title'>Compare your Air</h1>\r\n      <p className='headline'>\r\n         Compare the air quality between cities in the UK.<br/>\r\n         Select cities to compare using the search tool below.\r\n      </p>\r\n      <SearchInput/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/search-solid.c6a0effb.svg\";"],"sourceRoot":""}